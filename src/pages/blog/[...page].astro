---
interface Props {
    page: Page;
}

import type { Page } from "astro";
import type { Frontmatter } from "../../utils/types/frontmatter";
import Pagination from "../../components/Pagination.astro";
import Card from "../../components/Card.astro";
import BaseLayout from "../../layouts/BaseLayout.astro";
import type { GetStaticPathsOptions } from "astro";

export async function getStaticPaths({ paginate }: GetStaticPathsOptions) {
    const allPosts = await Astro.glob("./*.md");
    const posts = allPosts
    .sort(
      (a, b) =>
        new Date(b.frontmatter.pubDate).valueOf() -
        new Date(a.frontmatter.pubDate).valueOf()
    )
    .filter((post) => !post.frontmatter.draft);
    return paginate(posts, { pageSize: 9 });
}
const { page } = Astro.props;
const PageTitle = "Blog";
const desc = "liste des posts";
---

<BaseLayout title={PageTitle} description={desc} canonicalURL={"blog"}>
    <section slot="main" class="grid">
        <h2 class="sr-only">List of blog posts</h2>
        {
            page.data.map(
                ({
                    frontmatter,
                    url,
                }: {
                    frontmatter: Frontmatter;
                    url: string;
                }) => (
                    <Card
                        title={frontmatter.title}
                        pubDate={frontmatter.pubDate}
                        description={frontmatter.description}
                        url={url}
                        image={frontmatter.image}
                        tags={frontmatter.tags}
                    />
                )
            )
        }
        <Pagination page={page}></Pagination>
    </section>
</BaseLayout>
