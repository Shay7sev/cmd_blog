---
interface Props {
  page: Page;
}

import type { Page } from "astro";
import type { Frontmatter } from "../../utils/types/frontmatter";
import Card from "../../components/Card.astro";
import BaseLayout from "../../layouts/BaseLayout.astro";
import type { GetStaticPathsOptions } from "astro";

export async function getStaticPaths({ paginate }: GetStaticPathsOptions) {
  const allPosts = await Astro.glob("./*.md");
  const posts = allPosts.filter((post) => !post.frontmatter.draft);
  return paginate(posts, { pageSize: 9 });
}
const { page } = Astro.props;
const PageTitle = "Blog";
const desc = "liste des posts";
---

<BaseLayout
  title={PageTitle}
  description={desc}
  canonicalURL={"blog"}
  className={"grid"}
>
  <Fragment slot="main">
    <h2 class="sr-only">List of blog posts</h2>
    {
      page.data.map(
        ({ frontmatter, url }: { frontmatter: Frontmatter; url: string }) => (
          <Card
            title={frontmatter.title}
            pubDate={frontmatter.pubDate}
            description={frontmatter.description}
            url={url}
            image={frontmatter.image}
            tags={frontmatter.tags}
          />
        )
      )
    }
    {
      page.lastPage > 1 && (
        <nav aria-label="pagination" class="nav-paginate">
          <ul>
            {page.url.prev ? (
              <li class="btn">
                <a href={page.url.prev}>Previous</a>
              </li>
            ) : null}
            {page.url.next ? (
              <li class="btn">
                <a href={page.url.next}>Next</a>
              </li>
            ) : null}
          </ul>
        </nav>
      )
    }
  </Fragment>
</BaseLayout>
